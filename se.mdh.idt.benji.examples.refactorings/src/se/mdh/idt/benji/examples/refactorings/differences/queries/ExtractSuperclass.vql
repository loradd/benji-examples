package se.mdh.idt.benji.examples.refactorings.differences.queries

import "http://www.mdh.se/examples/refactorings/Metamodel"

import se.mdh.idt.benji.examples.refactorings.metamodel.queries.preserved_package_class
import se.mdh.idt.benji.examples.refactorings.metamodel.queries.preserved_class_attribute
import se.mdh.idt.benji.examples.refactorings.metamodel.queries.preserved_class_reference
import se.mdh.idt.benji.examples.refactorings.metamodel.queries.added_package_class
import se.mdh.idt.benji.examples.refactorings.metamodel.queries.added_class_superClass
import se.mdh.idt.benji.examples.refactorings.metamodel.queries.changed_attribute_owner
import se.mdh.idt.benji.examples.refactorings.metamodel.queries.changed_reference_owner

// CADCAR18 - Extract Superclass - Precondition
pattern ExtractSuperclassPrecondition (
	initial_package : Package, current_package : Package,
	initial_class : Class, current_class : Class, 
	initial_attribute : Attribute, current_attribute : Attribute, 
	initial_reference : Reference, current_reference : Reference
) {
	find preserved_package_class (initial_package, current_package, initial_class, current_class); 
	find preserved_class_attribute (initial_class, current_class, initial_attribute, current_attribute); 
	find preserved_class_reference (initial_class, current_class, initial_reference, current_reference); 
}

// CADCAR18 - Extract Superclass - Postcondition
pattern ExtractSuperclassPostcondition (
	initial_package : Package, current_package : Package, 
	initial_class : Class, current_class : Class, 
	initial_attribute : Attribute, current_attribute : Attribute, 
	initial_reference : Reference, current_reference : Reference, 
	current_superClass : Class
) { 
	find preserved_package_class (initial_package, current_package, initial_class, current_class); 
	find added_package_class (initial_package, current_package, current_superClass); 
	find added_class_superClass (initial_class, current_class, current_superClass); 
	find changed_attribute_owner (initial_attribute, current_attribute, initial_class, current_superClass); 
	find changed_reference_owner (initial_reference, current_reference, initial_class, current_superClass); 
}