package se.mdh.idt.benji.examples.refactorings.wordnet.queries

import "http://www.mdh.se/idt/benji/trace/Trace"
import "http://www.mdh.se/examples/refactorings/WordNet"

import se.mdh.idt.benji.trace.api.current
import se.mdh.idt.benji.trace.api.initial

// synset - get
// synset - create
// synset - delete
// synset - initial
pattern initial_synset (synset : TraceLink, initial_synset : Synset) {
	find initial (synset, initial_synset);	
}

// synset - current
pattern current_synset (synset : TraceLink, current_synset : Synset) {
	find current (synset, current_synset);
}

// synset - gloss - get
pattern get_synset_gloss (synset : TraceLink, gloss : java String) {
	find initial_synset_gloss (synset, _initial_synset, gloss);
	find current_synset_gloss (synset, _current_synset, gloss);
}

// synset - gloss - set
pattern set_synset_gloss (synset : TraceLink, gloss : java String) {
	neg find initial_synset_gloss (synset, _initial_synset, gloss);
	find current_synset_gloss (synset, _current_synset, gloss);
}

// synset - gloss - unset
pattern unset_synset_gloss (synset : TraceLink, gloss : java String) {
	find initial_synset_gloss (synset, _initial_synset, gloss);
	neg find current_synset_gloss (synset, _current_synset, gloss);
}

// synset - gloss - initial
pattern initial_synset_gloss (synset : TraceLink, initial_synset : Synset, gloss : java String) {
	find initial_synset (synset, initial_synset);
	Synset.gloss (initial_synset, gloss);	
}

// synset - gloss - current
pattern current_synset_gloss (synset : TraceLink, current_synset : Synset, gloss : java String) {
	find current_synset (synset, current_synset);
	Synset.gloss (current_synset, gloss);	
}

// synset - words - get
pattern get_synset_word (synset : TraceLink, word : TraceLink) {
	find initial_synset_word (synset, _initial_synset, word, _initial_word);
	find current_synset_word (synset, _current_synset, word, _current_word);
}

// synset - words - insert
pattern insert_synset_word (synset : TraceLink, word : TraceLink) {
	neg find initial_synset_word (synset, _initial_synset, word, _initial_word);
	find current_synset_word (synset, _current_synset, word, _current_word);
}

// synset - words - remove
pattern remove_synset_word (synset : TraceLink, word : TraceLink) {
	find initial_synset_word (synset, _initial_synset, word, _initial_word);
	neg find current_synset_word (synset, _current_synset, word, _current_word);	
}

// synset - words - initial
pattern initial_synset_word (synset : TraceLink, initial_synset : Synset, word : TraceLink, initial_word : Word) {
	find initial_synset (synset, initial_synset);
	find initial_word (word, initial_word);
	Synset.words (initial_synset, initial_word);	
}

// synset - words - current
pattern current_synset_word (synset : TraceLink, current_synset : Synset, word : TraceLink, current_word : Word) {
	find current_synset (synset, current_synset);
	find current_word (word, current_word);
	Synset.words (current_synset, current_word);
}

// synset - hyponyms - get
pattern get_synset_hyponym (synset : TraceLink, hyponym : TraceLink) {
	find initial_synset_hyponym (synset, _initial_synset, hyponym, _initial_hyponym);
	find current_synset_hyponym (synset, _current_synset, hyponym, _current_hyponym); 
}

// synset - hyponyms - insert
pattern insert_synset_hyponym (synset : TraceLink, hyponym : TraceLink) {
	neg find initial_synset_hyponym (synset, _initial_synset, hyponym, _initial_hyponym);
	find current_synset_hyponym (synset, _current_synset, hyponym, _current_hyponym); 
}

// synset - hyponyms - remove
pattern remove_synset_hyponym (synset : TraceLink, hyponym : TraceLink) {
	find initial_synset_hyponym (synset, _initial_synset, hyponym, _initial_hyponym);
	neg find current_synset_hyponym (synset, _current_synset, hyponym, _current_hyponym); 
}

// synset - hyponyms - initial
pattern initial_synset_hyponym (synset : TraceLink, initial_synset : Synset, hyponym : TraceLink, initial_hyponym : Synset) {
	find initial_synset (synset, initial_synset);
	find initial_synset (hyponym, initial_hyponym);
	Synset.hyponyms (initial_synset, initial_hyponym);
}

// synset - hyponyms - current
pattern current_synset_hyponym (synset : TraceLink, current_synset : Synset, hyponym : TraceLink, current_hyponym : Synset) {
	find current_synset (synset, current_synset);
	find current_synset (hyponym, current_hyponym);
	Synset.hyponyms (current_synset, current_hyponym);
}

// synset - hyperonyms - get
pattern get_synset_hyperonym (synset : TraceLink, hyperonym : TraceLink) {
	find initial_synset_hyperonym (synset, _initial_synset, hyperonym, _initial_hyperonym);
	find current_synset_hyperonym (synset, _current_synset, hyperonym, _current_hyperonym); 	
}

// synset - hyperonyms - insert
pattern insert_synset_hyperonym (synset : TraceLink, hyperonym : TraceLink) {
	neg find initial_synset_hyperonym (synset, _initial_synset, hyperonym, _initial_hyperonym);
	find current_synset_hyperonym (synset, _current_synset, hyperonym, _current_hyperonym); 	
}

// synset - hyperonyms - remove
pattern remove_synset_hyperonym (synset : TraceLink, hyperonym : TraceLink) {
	find initial_synset_hyperonym (synset, _initial_synset, hyperonym, _initial_hyperonym);
	neg find current_synset_hyperonym (synset, _current_synset, hyperonym, _current_hyperonym); 	
}

// synset - hyperonyms - initial
pattern initial_synset_hyperonym (synset : TraceLink, initial_synset : Synset, hyperonym : TraceLink, initial_hyperonym : Synset) {
	find initial_synset (synset, initial_synset);
	find initial_synset (hyperonym, initial_hyperonym);	
	Synset.hyperonyms (initial_synset, initial_hyperonym); 
}

// synset - hyperonyms - current
pattern current_synset_hyperonym (synset : TraceLink, current_synset : Synset, hyperonym : TraceLink, current_hyperonym : Synset) {
	find current_synset (synset, current_synset); 
	find current_synset (hyperonym, current_hyperonym);
	Synset.hyperonyms (current_synset, current_hyperonym);
}

// synset - meronyms - get
pattern get_synset_meronym (synset : TraceLink, meronym : TraceLink) {
	find initial_synset_meronym (synset, _initial_synset, meronym, _initial_meronym);
	find current_synset_meronym (synset, _current_synset, meronym, _current_meronym); 	
}

// synset - meronyms - insert
pattern insert_synset_meronym (synset : TraceLink, meronym : TraceLink) {
	neg find initial_synset_meronym (synset, _initial_synset, meronym, _initial_meronym);
	find current_synset_meronym (synset, _current_synset, meronym, _current_meronym); 	
}

// synset - meronyms - remove
pattern remove_synset_meronym (synset : TraceLink, meronym : TraceLink) {
	find initial_synset_meronym (synset, _initial_synset, meronym, _initial_meronym);
	neg find current_synset_meronym (synset, _current_synset, meronym, _current_meronym); 	
}

// synset - meronyms - initial
pattern initial_synset_meronym (synset : TraceLink, initial_synset : Synset, meronym : TraceLink, initial_meronym : Synset) {
	find initial_synset (synset, initial_synset);
	find initial_synset (meronym, initial_meronym);
	Synset.meronyms (initial_synset, initial_meronym);
}

// synset - meronyms - current
pattern current_synset_meronym (synset : TraceLink, current_synset : Synset, meronym : TraceLink, current_meronym : Synset) {
	find current_synset (synset, current_synset);
	find current_synset (meronym, current_meronym);
	Synset.meronyms (current_synset, current_meronym);
}

// synset - holonyms - get
pattern get_synset_holonym (synset : TraceLink, holonym : TraceLink) {
	find initial_synset_holonym (synset, _initial_synset, holonym, _initial_holonym);
	find current_synset_holonym (synset, _current_synset, holonym, _current_holonym); 	
}

// synset - holonyms - insert
pattern insert_synset_holonym (synset : TraceLink, holonym : TraceLink) {
	neg find initial_synset_holonym (synset, _initial_synset, holonym, _initial_holonym);
	find current_synset_holonym (synset, _current_synset, holonym, _current_holonym); 	
}

// synset - holonyms - remove
pattern remove_synset_holonym (synset : TraceLink, holonym : TraceLink) {
	find initial_synset_holonym (synset, _initial_synset, holonym, _initial_holonym);
	neg find current_synset_holonym (synset, _current_synset, holonym, _current_holonym); 	
}

// synset - holonyms - initial
pattern initial_synset_holonym (synset : TraceLink, initial_synset : Synset, holonym : TraceLink, initial_holonym : Synset) {
	find initial_synset (synset, initial_synset);
	find initial_synset (holonym, initial_holonym);
	Synset.holonyms (initial_synset, initial_holonym);
}

// synset - holonyms - current
pattern current_synset_holonym (synset : TraceLink, current_synset : Synset, holonym : TraceLink, current_holonym : Synset) {
	find current_synset (synset, current_synset);
	find current_synset (holonym, current_holonym);
	Synset.holonyms (current_synset, current_holonym);
}