package se.mdh.idt.benji.examples.refactorings.metamodel.queries

import "http://www.mdh.se/examples/refactorings/Metamodel"
import "http://www.mdh.se/idt/benji/trace/Trace"

// class - get
pattern get_class (class : TraceLink) {
	find initial_class (class, _initial_class);
	find current_class (class, _current_class);
}

// class - create
pattern create_class (class : TraceLink) {
	neg find initial_class (class, _initial_class);
	find current_class (class, _current_class);	
}

// class - delete
pattern delete_class (class : TraceLink) {
	find initial_class (class, _initial_class);
	neg find current_class (class, _current_class);
}

// class - initial
pattern initial_class (class : TraceLink, initial_class : Class) {
	find initial_classifier (class, initial_class);	
}

// class - current
pattern current_class (class : TraceLink, current_class : Class) {
	find current_classifier (class, current_class);
}

// class - name - get
pattern get_class_name (class : TraceLink, name : java String) {
	find initial_class_name (class, _initial_class, name);
	find current_class_name (class, _current_class, name);
}

// class - name - set
pattern set_class_name (class : TraceLink, name : java String) {
	neg find initial_class_name (class, _initial_class, name);
	find current_class_name (class, _current_class, name);	
}

// class - name - unset
pattern unset_class_name (class : TraceLink, name : java String) {
	find initial_class_name (class, _initial_class, name);
	neg find current_class_name (class, _current_class, name);
}

// class - name - initial
pattern initial_class_name (class : TraceLink, initial_class : Class, name : java String) {
	find initial_classifier_name (class, initial_class, name);	
}

// class - name - current
pattern current_class_name (class : TraceLink, current_class : Class, name : java String) {
	find current_classifier_name (class, current_class, name);	
}

// class - package - get
pattern get_class_package (class : TraceLink, ^package : TraceLink) {
	find initial_class_package (class, _initial_class, ^package, _initial_package);
	find current_class_package (class, _current_class, ^package, _current_package);
}

// class - package - set
pattern set_class_package (class : TraceLink, ^package : TraceLink) {
	neg find initial_class_package (class, _initial_class, ^package, _initial_package);
	find current_class_package (class, _current_class, ^package, _current_package);	
}

// class - package - unset
pattern unset_class_package (class : TraceLink, ^package : TraceLink) {
	find initial_class_package (class, _initial_class, ^package, _initial_package);
	neg find current_class_package (class, _current_class, ^package, _current_package);
}

// class - package - initial
pattern initial_class_package (class : TraceLink, initial_class : Class, ^package : TraceLink, initial_package : Package) {
	find initial_classifier_package (class, initial_class, ^package, initial_package);	
}

// class - package - current
pattern current_class_package (class : TraceLink, current_class : Class, ^package : TraceLink, current_package : Package) {
	find current_classifier_package (class, current_class, ^package, current_package);	
}

// class - abstract - get
pattern get_class_abstract (class : TraceLink, abstract : java Boolean) {
	find initial_class_abstract (class, _initial_class, abstract);
	find current_class_abstract (class, _current_class, abstract);
}

// class - abstract - set
pattern set_class_abstract (class : TraceLink, abstract : java Boolean) {
	neg find initial_class_abstract (class, _initial_class, abstract);
	find current_class_abstract (class, _current_class, abstract);	
}

// class - abstract - unset
pattern unset_class_abstract (class : TraceLink, abstract : java Boolean) {
	find initial_class_abstract (class, _initial_class, abstract); 
	neg find current_class_abstract (class, _current_class, abstract);
}

// class - abstract - initial
pattern initial_class_abstract (class : TraceLink, initial_class : Class, abstract : java Boolean) {
	find initial_class (class, initial_class);
	Class.abstract (initial_class, abstract);	
}

// class - abstract - current
pattern current_class_abstract (class : TraceLink, current_class : Class, abstract : java Boolean) {
	find current_class (class, current_class);
	Class.abstract (current_class, abstract);	
}

// class - superClass - get
pattern get_class_superClass (class : TraceLink, superClass : TraceLink) {
	find initial_class_superClass (class, _initial_class, superClass, _initial_superClass);
	find current_class_superClass (class, _current_class, superClass, _current_superClass);
}

// class - superClass - set
pattern set_class_superClass (class : TraceLink, superClass : TraceLink) {
	neg find initial_class_superClass (class, _initial_class, superClass, _initial_superClass);
	find current_class_superClass (class, _current_class, superClass, _current_superClass);	
}

// class - superClass - unset
pattern unset_class_superClass (class : TraceLink, superClass : TraceLink) {
	find initial_class_superClass (class, _initial_class, superClass, _initial_superClass);
	neg find current_class_superClass (class, _current_class, superClass, _current_superClass);
}

// class - superClass - initial
pattern initial_class_superClass (class : TraceLink, initial_class : Class, superClass : TraceLink, initial_superClass : Class) {
	find initial_class (class, initial_class);
	find initial_class (superClass, initial_superClass);
	Class.superClass (initial_class, initial_superClass);	
}

// class - superClass - current
pattern current_class_superClass (class : TraceLink, current_class : Class, superClass : TraceLink, current_superClass : Class) {
	find current_class (class, current_class);
	find current_class (superClass, current_superClass);
	Class.superClass (current_class, current_superClass);	
}


// class - subClass - get
pattern get_class_subClass (class : TraceLink, subClass : TraceLink) {
	find initial_class_subClass (class, _initial_class, subClass, _initial_subClass);
	find current_class_subClass (class, _current_class, subClass, _current_subClass);
}

// class - subClass - insert
pattern insert_class_subClass (class : TraceLink, subClass : TraceLink) {
	neg find initial_class_subClass (class, _initial_class, subClass, _initial_subClass);
	find current_class_subClass (class, _current_class, subClass, _current_subClass);	
}

// class - subClass - remove
pattern remove_class_subClass (class : TraceLink, subClass : TraceLink) {
	find initial_class_subClass (class, _initial_class, subClass, _initial_subClass);
	neg find current_class_subClass (class, _current_class, subClass, _current_subClass);	
}

// class - subClass - initial
pattern initial_class_subClass (class : TraceLink, initial_class : Class, subClass : TraceLink, initial_subClass : Class) {
	find initial_class (class, initial_class);
	find initial_class (subClass, initial_subClass);
	Class.subClasses (initial_class, initial_subClass);
}

// class - subClass - current
pattern current_class_subClass (class : TraceLink, current_class : Class, subClass : TraceLink, current_subClass : Class) {
	find current_class (class, current_class);
	find current_class (subClass, current_subClass);
	Class.subClasses (current_class, current_subClass);	
}

// class - structuralFeature - get
pattern get_class_structuralFeature (class : TraceLink, structuralFeature : TraceLink) {
	find initial_class_structuralFeature (class, _initial_class, structuralFeature, _initial_structuralFeature);
	find current_class_structuralFeature (class, _current_class, structuralFeature, _current_structuralFeature); 
}

// class - structuralFeature - insert
pattern insert_class_structuralFeature (class : TraceLink, structuralFeature : TraceLink) {
	neg find initial_class_structuralFeature (class, _initial_class, structuralFeature, _initial_structuralFeature);
	find current_class_structuralFeature (class, _current_class, structuralFeature, _current_structuralFeature);	
}

// class - structuralFeature - remove
pattern remove_class_structuralFeature (class : TraceLink, structuralFeature : TraceLink) {
	find initial_class_structuralFeature (class, _initial_class, structuralFeature, _initial_structuralFeature);
	neg find current_class_structuralFeature (class, _current_class, structuralFeature, _current_structuralFeature); 	
}

// class - structuralFeature - initial
pattern initial_class_structuralFeature (class : TraceLink, initial_class : Class, structuralFeature : TraceLink, initial_structuralFeature : StructuralFeature) {
	find initial_class (class, initial_class);
	find initial_structuralFeature (structuralFeature, initial_structuralFeature);
	Class.structuralFeatures (initial_class, initial_structuralFeature);	
}

// class - structuralFeature - current
pattern current_class_structuralFeature (class : TraceLink, current_class : Class, structuralFeature : TraceLink, current_structuralFeature : StructuralFeature) {
	find current_class (class, current_class);
	find current_structuralFeature (structuralFeature, current_structuralFeature);
	Class.structuralFeatures (current_class, current_structuralFeature);
}

// class - attribute - get
pattern get_class_attribute (class : TraceLink, attribute : TraceLink) {
	find initial_class_attribute (class, _initial_class, attribute, _initial_attribute);
	find current_class_attribute (class, _current_class, attribute, _current_attribute);
}

// class - attribute - insert
pattern insert_class_attribute (class : TraceLink, attribute : TraceLink) {
	neg find initial_class_attribute (class, _initial_class, attribute, _initial_attribute);
	find current_class_attribute (class, _current_class, attribute, _current_attribute);	
}

// class - attribute - remove
pattern remove_class_attribute (class : TraceLink, attribute : TraceLink) {
	find initial_class_attribute (class, _initial_class, attribute, _initial_attribute);
	neg find current_class_attribute (class, _current_class, attribute, _current_attribute);	
}

// class - attribute - initial
pattern initial_class_attribute (class : TraceLink, initial_class : Class, attribute : TraceLink, initial_attribute : Attribute) {
	find initial_class_structuralFeature (class, initial_class, attribute, initial_attribute);
}

// class - attribute - current
pattern current_class_attribute (class : TraceLink, current_class : Class, attribute : TraceLink, current_attribute : Attribute) {
	find current_class_structuralFeature (class, current_class, attribute, current_attribute);	
}

// class - reference - get
pattern get_class_reference (class : TraceLink, reference : TraceLink) {
	find initial_class_reference (class, _initial_class, reference, _initial_reference);
	find current_class_reference (class, _current_class, reference, _current_reference);
}

// class - reference - insert
pattern insert_class_reference (class : TraceLink, reference : TraceLink) {
	neg find initial_class_reference (class, _initial_class, reference, _initial_reference);
	find current_class_reference (class, _current_class, reference, _current_reference); 	
}

// class - reference - remove
pattern remove_class_reference (class : TraceLink, reference : TraceLink) {
	find initial_class_reference (class, _initial_class, reference, _initial_reference); 
	neg find current_class_reference (class, _current_class, reference, _current_reference);	
}

// class - reference - initial
pattern initial_class_reference (class : TraceLink, initial_class : Class, reference : TraceLink, initial_reference : Reference) {
	find initial_class_structuralFeature (class, initial_class, reference, initial_reference);	
}

// class - reference - current
pattern current_class_reference (class : TraceLink, current_class : Class, reference : TraceLink, current_reference : Reference) {
	find current_class_structuralFeature (class, current_class, reference, current_reference);
}