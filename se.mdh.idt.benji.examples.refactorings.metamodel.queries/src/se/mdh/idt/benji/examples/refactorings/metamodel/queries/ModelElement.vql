package se.mdh.idt.benji.examples.refactorings.metamodel.queries

import "http://www.mdh.se/examples/refactorings/Metamodel"

// model element - preserved
pattern preserved_modelElement (initial_modelElement : ModelElement, current_modelElement : ModelElement) {
	find se.mdh.idt.benji.trace.api.preserved (initial_modelElement, current_modelElement); 
}

// model element - created
pattern created_modelElement (current_modelElement : ModelElement) {
	find se.mdh.idt.benji.trace.api.created (current_modelElement); 
}

// model element - deleted
pattern deleted_modelElement (initial_modelElement : ModelElement) {
	find se.mdh.idt.benji.trace.api.deleted (initial_modelElement); 
}

// model element - name
pattern modelElement_name (modelElement : ModelElement, name : java String) {
	ModelElement.name (modelElement, name); 
} 

// model element - name - preserved
pattern preserved_modelElement_name (
	initial_modelElement : ModelElement, current_modelElement : ModelElement, 
	initial_name : java String, current_name : java String
) {
	find preserved_modelElement (initial_modelElement, current_modelElement); 
	find modelElement_name (initial_modelElement, initial_name); 
	find modelElement_name (current_modelElement, current_name); 
	check (initial_name == current_name); 
}

// model element - name - changed
pattern changed_modelElement_name (
	initial_modelElement : ModelElement, current_modelElement : ModelElement, 
	initial_name : java String, current_name : java String
) {
	find preserved_modelElement (initial_modelElement, current_modelElement); 
	find modelElement_name (initial_modelElement, initial_name); 
	find modelElement_name (current_modelElement, current_name); 
	check (initial_name != current_name); 
}